package com.example.demo.controller;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.example.demo.model.Empleado;
import com.example.demo.service.ServicioEmpleado;

@Controller
public class ControlEmpleado {

	@Autowired
	private ServicioEmpleado servicioempleados;

	// Muestra la lista de empleados.
	@GetMapping("/")
	public String viewHomePage(Model model) {
		return findPaginated(1,model);
		
	}

	@GetMapping("/showNewEmployeeForm")
	public String showNewEmployeeForm(Model model) {
		Empleado empleado = new Empleado();
		model.addAttribute("empleado", empleado);
		
		return "new_empleado";
	}
	
	
	//Guardo empleado a la hora de crear uno nuevo, obtengo el correo y la hora de forma automatica.
	@PostMapping("/guardarEmpleado")
	public String guardarEmpleado(@ModelAttribute("empleado") Empleado empleado) {
		//Guardo empleado a la base de datos
		
		//Declaro las variables con los valores necesarios para crear el correo electronico.
		String nombre = empleado.getPrimerNombre();
		String ape2 = empleado.getPrimerApellido();
		String ape = ape2.replaceAll("\\s+", "");
		String pais = empleado.getPaisEmpleo();
		String correoJs;
		
		//Obtengo la hora de registro con las librerias de fecha
		Date date = Calendar.getInstance().getTime();  
		DateFormat dateFormat = new SimpleDateFormat("yyyy-mm-dd hh:mm:ss");  
		String strDate = dateFormat.format(date);  
		
		
		
		correoJs=nombre+ "." + ape+"."+empleado.getId();
		//Valido tamaÃ±o del correo. (Por ahora el valor del string no puede ser menor al valor para cortarlo, tira error 500)
//		if(correoJs.length()>10) {
//			correoJs=correoJs.substring(0,10);
//		}
//		else {
//			return correoJs;
//		}
		
		//valido donde esta ubicado el empleado para generar el dominio correspondiente. 
		if (pais.equals("Colombia")) {

			correoJs = correoJs + "@cidenet.com.co";
		} else {
			correoJs = correoJs +"@cidenet.com.us";
		}
			
		empleado.setFechaHora(strDate);
		empleado.setCorreo(correoJs);
		servicioempleados.guardarEmpleado(empleado);
			
		return "redirect:/";
	}

	
	//Guarto empleado a la hora de actualizar.
	@RequestMapping(value="/guardarEmpleado2",method=RequestMethod.POST)
	public String guardarEmpleado2(@ModelAttribute("empleado") Empleado empleado) {
		//Guardo empleado a la base de datos
				
		servicioempleados.guardarEmpleado2(empleado);
				
		return "redirect:/";
	}
	
	
	@GetMapping("/showFormForUpdate/{id}")
	public String showFormForUpdate(@PathVariable (value = "id") long id, Model model) {
		
		
		//Obtengo los valores de los empleados desde el ServicioEmpleados
		Empleado empleado = servicioempleados.getEmpleadoporId(id);
		
		//Se prellena el formulario con el modelo
		model.addAttribute("empleado",empleado);
		return "update_empleado";
	}
	
	@GetMapping("/deleteEmpleado/{id}")	
	public String deleteEmpleado(@PathVariable (value = "id")long id) {
	
		//Borrar empleado
		
		this.servicioempleados.deleteEmpleadoById(id);
		return "redirect:/";
		
	}
	
	@GetMapping("/page/{pageNo}/")
	public String findPaginated(@PathVariable(value = "pageNo") int pageNo, Model model) {
		int pageSize =20;
		
		Page<Empleado> page = servicioempleados.findPaginated(pageNo, pageSize);
		List<Empleado> listaEmpleados = page.getContent();
		
		model.addAttribute("currentPage", pageNo);
		model.addAttribute("totalPages",page.getTotalPages());
		model.addAttribute("totalItems",page.getTotalElements());
		model.addAttribute("listaEmpleados",listaEmpleados);
		
		return "index";
		
	}
	
}
